unit UConexao;

interface

uses
   FireDAC.Stan.Intf, FireDAC.Stan.Option,FireDAC.Stan.Error, FireDAC.UI.Intf,
   FireDAC.Phys.Intf, FireDAC.Stan.Def,System.SysUtils,
   FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.VCLUI.Wait,
   FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf, FireDAC.DApt, Data.DB,
   FireDAC.Comp.DataSet, FireDAC.Comp.Client, FireDAC.Phys.FB;
type
   TConexao = Class
      Private
         FConn : TFDConnection;
         FDPhysFBDriverLink1: TFDPhysFBDriverLink;
         procedure configurarConexao;
         function CriarQuery(): TFDQuery;
      public
         constructor Create;
         destructor Destroy;override;
         function GetConn():TFDConnection;
   End;
Const
   PATH_BANCO = 'C:\Users\Ursão-PC\Desktop\EXEMPLO_MVC\BD_MVC.FDB';
implementation

{ TConexao }

procedure TConexao.configurarConexao;
begin
   FConn.Params.DriverID := 'FB';
   FConn.Params.Database := PATH_BANCO;
   FConn.Params.UserName := 'SYSDBA';
   FConn.Params.Password := 'masterkey';
   FConn.LoginPrompt     := False;
end;

constructor TConexao.Create;
begin
   FConn := TFDConnection.Create(nil);

   self.configurarConexao;
end;

function TConexao.CriarQuery: TFDQuery;
var
  VQuery: TFDQuery;
begin
   vQuery := TFDQuery.Create(nil);
   VQuery.Connection := FConn;

   Result := VQuery;
end;

destructor TConexao.Destroy;
begin
   FreeAndNil(FConn);
  inherited;
end;

function TConexao.GetConn: TFDConnection;
begin
   Result := FConn;
end;

end.
